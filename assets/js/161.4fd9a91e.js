(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{530:function(t,e,o){"use strict";o.r(e);var v=o(29),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"at-commands-for-rak811-lpwan-evaluation-board"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#at-commands-for-rak811-lpwan-evaluation-board"}},[t._v("#")]),t._v(" AT Commands for RAK811 LPWAN Evaluation Board")]),t._v(" "),o("p",[t._v("The purpose of this document is to demonstrate on how to configure the RAK811 LPWAN Evaluation Board thru the use of AT Commands via a "),o("strong",[t._v("Serial Port Tool")]),t._v(" running in your Windows PC. The list below shows the AT Commands available for use:")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[o("strong",[t._v("AT Command")])]),t._v(" "),o("th",[o("strong",[t._v("Description")])])])]),t._v(" "),o("tbody",[o("tr",[o("td",[o("code",[t._v("at+help")])]),t._v(" "),o("td",[t._v("This AT command can show all available AT commands of this module/product for you")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+version")])]),t._v(" "),o("td",[t._v("Get the current firmware version number.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+get_config=device:status")])]),t._v(" "),o("td",[t._v("Get all information about the device’s hardware components and their current status.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:restart")])]),t._v(" "),o("td",[t._v("After set, the device will restart.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:boot")])]),t._v(" "),o("td",[t._v("Lets the device work in boot mode")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+run")])]),t._v(" "),o("td",[t._v("Stop boot mode and run as normal. Only valid when the device works in boot mode.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:sleep:X")])]),t._v(" "),o("td",[t._v("After setting, the device will go to sleep mode or wake up immediately."),o("br"),o("br"),t._v("• "),o("strong",[t._v("0")]),t._v(" - wake up"),o("br"),o("br"),t._v("• "),o("strong",[t._v("1")]),t._v(" - sleep")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:gpio:X:Y")])]),t._v(" "),o("td",[t._v("Set a certain GPIO pin to high/low level. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - the pin number of a certain GPIO on RAK811 module. "),o("br"),t._v("• "),o("strong",[t._v("Y")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": low level, "),o("strong",[t._v("1")]),t._v(": high level.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+get_config=device:gpio:X")])]),t._v(" "),o("td",[t._v("Get a certain GPIO’s level. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" -the pin number of the GPIO on RAK811 module.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+get_config=device:adc:X")])]),t._v(" "),o("td",[t._v("Get the ADC value. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - the pin number of the ADC on RAK811 module.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:iic:X:YY:ZZ:AAA")])]),t._v(" "),o("td",[t._v("Read data from I2C or write a data to I2C. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": read, "),o("strong",[t._v("1")]),t._v(": write. "),o("br"),t._v("• "),o("strong",[t._v("YY")]),t._v(" - device address, in HEX format. "),o("br"),t._v("• "),o("strong",[t._v("ZZ")]),t._v(" - sensor’s register address, in HEX format. "),o("br"),t._v("• "),o("strong",[t._v("AAA")]),t._v(" - if read, this parameter means the length you want to read. If write, this parameter means the data you want to write. It must be in HEX format too.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:uart_mode:X:Y")])]),t._v(" "),o("td",[t._v("Set the UART work mode. Parameters "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - UART number on RAK811 module. "),o("br"),t._v("• "),o("strong",[t._v("Y")]),t._v(" - "),o("strong",[t._v("1")]),t._v(": Passthrough mode. "),o("br"),t._v(" "),o("strong",[t._v("Note:")]),t._v(" If you want to go back to configuration mode, enter "),o("code",[t._v("+++")]),t._v("in the serial port.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=device:uart:X:Y")])]),t._v(" "),o("td",[t._v("Set a certain UART’s Baud rate. "),o("br"),t._v("• "),o("strong",[t._v("X -")]),t._v(" the UART number "),o("br"),t._v("• "),o("strong",[t._v("Y -")]),t._v(" the Baud rate value.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+send=uart:X:YYY")])]),t._v(" "),o("td",[t._v("Send data through UART. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - the UART number of RAK811 module "),o("br"),t._v("• "),o("strong",[t._v("YYY")]),t._v(" - the data you want to send through UART")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+join")])]),t._v(" "),o("td",[t._v("Start LoRa® Network join procedure.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+send=lora:X:YYY")])]),t._v(" "),o("td",[t._v("Send a customized data. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - LoRa® port "),o("br"),t._v("• "),o("strong",[t._v("YYY")]),t._v(" - the data which you want to send. The limited length is 50 Bytes, and the data must be in HEX format.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:work_mode:X")])]),t._v(" "),o("td",[t._v("Set the work mode for LoRa®. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": LoRaWAN®, "),o("strong",[t._v("1")]),t._v(": LoRaP2P, "),o("strong",[t._v("2")]),t._v(": Test Mode.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:join_mode:X")])]),t._v(" "),o("td",[t._v("Set the join mode for LoRaWAN®. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": OTAA, "),o("strong",[t._v("1")]),t._v(": ABP")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:class:X")])]),t._v(" "),o("td",[t._v("Set the class for LoRa®. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": Class A, "),o("strong",[t._v("1")]),t._v(": Class B, "),o("strong",[t._v("2")]),t._v(": Class C")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:region:XXX")])]),t._v(" "),o("td",[t._v("Set the region for LoRa®. "),o("br"),t._v("• "),o("strong",[t._v("XXX")]),t._v(" - one of the following items: EU868 EU433, CN470, IN865, EU868, AU915, US915, KR920, AS923.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:confirm:X")])]),t._v(" "),o("td",[t._v("Set the type of messages which will be sent out through LoRa®. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": unconfirm, "),o("strong",[t._v("1")]),t._v(": confirm")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:dev_eui:XXXX")])]),t._v(" "),o("td",[t._v("Set the device EUI for OTAA. "),o("br"),t._v("• "),o("strong",[t._v("XXXX")]),t._v(" - the device EUI.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:app_eui:XXXX")])]),t._v(" "),o("td",[t._v("Set the application EUI for OTAA. "),o("br"),t._v("• "),o("strong",[t._v("XXXX")]),t._v(" - the application EUI.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:app_key:XXXX")])]),t._v(" "),o("td",[t._v("Set the application key for OTAA. "),o("br"),t._v("• "),o("strong",[t._v("XXXX")]),t._v(" - the application key.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:dev_addr:XXXX")])]),t._v(" "),o("td",[t._v("Set the device address for ABP. "),o("br"),t._v("• "),o("strong",[t._v("XXXX")]),t._v(" - the device address.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:apps_key:XXXX")])]),t._v(" "),o("td",[t._v("Set the application session key for ABP. "),o("br"),t._v("• "),o("strong",[t._v("XXXX -")]),t._v(" the application session key.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:nwks_key:XXXX")])]),t._v(" "),o("td",[t._v("Set the network session key for ABP. "),o("br"),t._v("• "),o("strong",[t._v("XXXX")]),t._v(" - the network session key.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:ch_mask:X:Y")])]),t._v(" "),o("td",[t._v("Set a certain channel on or off. "),o("br"),t._v("• "),o("strong",[t._v("X -")]),t._v(" the channel number, and you can check which channel can be set before you set it. "),o("br"),t._v("• "),o("strong",[t._v("Y")]),t._v(" - "),o("strong",[t._v("0")]),t._v(": off, "),o("strong",[t._v("1")]),t._v(": on")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:adr:X")])]),t._v(" "),o("td",[t._v("Open or close the ADR function of LoRa® Node. "),o("br"),t._v("• "),o("strong",[t._v("X - 0")]),t._v(": Close ADR; "),o("strong",[t._v("1")]),t._v(": Open ADR.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:dr:X")])]),t._v(" "),o("td",[t._v("Set the DR of LoRa® Node. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - the number of DR. Generally, the value of X can be 0~5. More details, please check the LoRaWAN® 1.0.2 specification.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lora:tx_power:X")])]),t._v(" "),o("td",[t._v("Set the TX power level. "),o("br"),t._v("• "),o("strong",[t._v("X")]),t._v(" - The level of TX power. If you want to know the relationship between TX power level and dbm, please have a look at LoRaWAN® 1.0.2 region specification on this "),o("a",{attrs:{href:"https://github.com/RAKWireless/Update-File/blob/master/LoRaWANRegionalParametersv1.0.2.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("link"),o("OutboundLink")],1),t._v(".")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+get_config=lora:status")])]),t._v(" "),o("td",[t._v("It will return all of the current information of LoRa®, except LoRa® channel.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+get_config=lora:channel")])]),t._v(" "),o("td",[t._v("It will return the state of all LoRa® channels, then you can see which channel is closed and which channel is open very clearly.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+set_config=lorap2p:XXX:Y:Z:A:B:C")])]),t._v(" "),o("td",[t._v("Set the parameters for LoRa® P2P mode. This AT command is valid when the work mode is ·LoRa® P2P. "),o("br"),t._v("• "),o("strong",[t._v("XXX")]),t._v(" - Frequency in Hz. "),o("br"),t._v("• "),o("strong",[t._v("Y")]),t._v(" - Spreading factor, [6, 7, 8, 9, 10, 11, 12]. "),o("br"),t._v("• "),o("strong",[t._v("Z")]),t._v(" - Bandwidth, "),o("strong",[t._v("0")]),t._v(": 125 kHz, "),o("strong",[t._v("1")]),t._v(": 250 kHz, "),o("strong",[t._v("2")]),t._v(": 500kHz. "),o("br"),t._v("• "),o("strong",[t._v("A")]),t._v(" - Coding Rate, "),o("strong",[t._v("1")]),t._v(": 4/5, "),o("strong",[t._v("2")]),t._v(": 4/6, "),o("strong",[t._v("3")]),t._v(": 4/7, "),o("strong",[t._v("4")]),t._v(": 4/8. "),o("br"),t._v("• "),o("strong",[t._v("B")]),t._v(" - Preamble Length, 5-65535. "),o("br"),t._v("• "),o("strong",[t._v("C")]),t._v(" - Power in dbm, 5-20.")])]),t._v(" "),o("tr",[o("td",[o("code",[t._v("at+send=lorap2p:XXX")])]),t._v(" "),o("td",[t._v("Send data through LoRaP2P. This AT command is valid when it works in LoRaP2P mode. "),o("br"),t._v("• "),o("strong",[t._v("XXX")]),t._v(" - Data in HEX")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);