(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{421:function(t,e,s){"use strict";s.r(e);var a=s(29),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rui-device-general-format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rui-device-general-format"}},[t._v("#")]),t._v(" RUI Device General Format")]),t._v(" "),s("p",[t._v("This part supports all module with device API")]),t._v(" "),s("h2",{attrs:{id:"general-format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general-format"}},[t._v("#")]),t._v(" General Format")]),t._v(" "),s("p",[s("strong",[t._v("rui_device_xxx()")])]),t._v(" "),s("h2",{attrs:{id:"rui-device-version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rui-device-version"}},[t._v("#")]),t._v(" RUI Device Version")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("RUI_RETURN_STATUS "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rui_device_version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint8_t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("@brief")])]),t._v(" "),s("th",[t._v("This API is used to get the current firmware version of your device")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("@return")])]),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/en-us/rui/#rui-return-status"}},[t._v("RUI_RETURN_STATUS")])],1)]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@param")])]),t._v(" "),s("td",[t._v("uint8_t *version: the current firmware version")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@module")])]),t._v(" "),s("td",[t._v("RAK811, RAK4200, RAK8212-M, RAK5010, 4400 and RAK4600 core module")])])])]),t._v(" "),s("h2",{attrs:{id:"rui-device-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rui-device-reset"}},[t._v("#")]),t._v(" RUI Device Reset")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("RUI_RETURN_STATUS "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rui_device_reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("@brief")])]),t._v(" "),s("th",[t._v("This API is used to reset the device")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("@return")])]),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/en-us/rui/#rui-return-status"}},[t._v("RUI_RETURN_STATUS")])],1)]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@param")])]),t._v(" "),s("td",[t._v("void")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@module")])]),t._v(" "),s("td",[t._v("RAK811, RAK4200, RAK8212-M, RAK5010, 4400 and RAK4600 core module")])])])]),t._v(" "),s("h2",{attrs:{id:"rui-device-sleep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rui-device-sleep"}},[t._v("#")]),t._v(" RUI Device Sleep")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sensor_wakeup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sensor_sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nRUI_RETURN_STATUS "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rui_sensor_register_callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sensor_wakeup callback1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sensor_sleep callback2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nRUI_RETURN_STATUS "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rui_device_sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint32_t on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("@brief")])]),t._v(" "),s("th",[t._v("This API is used to set the device to sleep mode.")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("@return")])]),t._v(" "),s("td",[t._v("NULL")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@param")])]),t._v(" "),s("td",[t._v("uint32_t on/off: on/off"),s("br"),s("br"),t._v(" sensor_wakeup, sensor_sleep: app callback, user can add sensor operation here to finish function and power control")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@module")])]),t._v(" "),s("td",[t._v("RAK811, RAK4200, RAK8212-M, RAK5010, 4400 and RAK4600 core module")])])])]),t._v(" "),s("h2",{attrs:{id:"rui-device-boot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rui-device-boot"}},[t._v("#")]),t._v(" RUI Device Boot")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rui_device_boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("@brief")])]),t._v(" "),s("th",[t._v("This API is used to set the device to boot mode.")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("@return")])]),t._v(" "),s("td",[t._v("NULL")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@param")])]),t._v(" "),s("td",[t._v("NULL")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("@support")])]),t._v(" "),s("td",[t._v("RAK811 and RAK4200 core module")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);